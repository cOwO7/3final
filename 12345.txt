@GetMapping("/weather")
    public String index(Model model) {
        // 현재 시간 기준으로 baseDate와 baseTime 계산
        LocalDateTime now = LocalDateTime.now();
        String baseDate = now.format(DateTimeFormatter.ofPattern("yyyyMMdd"));
        String baseTime;

        // 1시간 전 시간 계산
        LocalDateTime oneHourAgo = now.minusHours(1);

        // 발표 기준 시간 찾기 (1시간 전 기준으로 3시간 단위)
        int hour = oneHourAgo.getHour();
        hour -= hour % 1; // n시간 단위로 내림
        baseTime = String.format("%02d00", hour);

        // 자정 이전의 경우 baseDate 조정
        if (hour == 23 && oneHourAgo.getHour() < hour) {
            baseDate = now.minusDays(1).format(DateTimeFormatter.ofPattern("yyyyMMdd"));
        }

        // Thymeleaf 템플릿에 전달
        model.addAttribute("baseDate", baseDate);
        model.addAttribute("baseTime", baseTime);

        return "index"; // index.html
    }

 
    /**
     * 초단기예보조회
     * @param weatherDto
     * @return
     * @throws IOException
     */
    @PostMapping(value = "/getWeather")
    @ResponseBody
    public ResponseEntity<ResultDto> getWeather(@RequestBody WeatherDto weatherDto) throws IOException {
    	Map<String, Map<String, String>> groupedWeatherData = weatherService.getWeatherGroupedByTime(weatherDto);
    	
    	ResultDto result = ResultDto.builder()
    			.resultCode("SUCCESS")
    			.message("조회가 완료되었습니다.")
    			.resultData(groupedWeatherData) // 가공된 데이터 전달
    			.url(null)
    			.build();
    	
    	return new ResponseEntity<>(result, HttpStatus.OK);
    }